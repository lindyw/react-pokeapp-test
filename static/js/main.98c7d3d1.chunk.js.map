{"version":3,"sources":["fonts/PokemonGB.ttf","components/Header.js","components/Welcome.js","components/PokemonList.js","components/Search.js","components/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","renderBody","props","view","className","to","src","alt","this","React","Component","Welcome","style","textDecoration","color","styled","Link","PokemonList","state","name","index","url","split","length","setState","Search","pokemons","filter","axios","get","res","data","event","target","value","substr","toLowerCase","filteredNames","pokemon","indexOf","Fragment","type","placeholder","onChange","updateSearch","bind","map","key","TYPE_COLORS","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","Pokemon","imageUrl","types","moves","description","stats","hp","attack","defense","speed","specialAttack","specialDefense","height","weight","eggGroups","abilities","efforts","hatchSteps","match","params","pokemonUrl","pokemonSpeciesUrl","pokemonData","sprites","front_default","stat","typeColor","move","ability","a","charAt","toUpperCase","substring","join","effort","speciesData","flavor_text_entries","some","flavor","language","flavor_text","replace","catchRate","Math","round","group","Card","width","position","border","Body","Title","Img","variant","Text","padding","ProgressBar","striped","now","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98c7d3d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PokemonGB.831e1f4d.ttf\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\nclass Header extends React.Component {\r\n  // Methods\r\n  renderBody = () => {\r\n    if (this.props.view === \"home\") {\r\n      return;\r\n    } else if (this.props.view === \"search\") {\r\n      return (\r\n        <li className=\"header-li\">\r\n          > <Link to=\"/search\">Pokemon</Link>\r\n        </li>\r\n      );\r\n    } else {\r\n      return (\r\n        <li className=\"header-li\">\r\n          > <Link to=\"/search\">Pokemon</Link> > {this.props.view}\r\n        </li>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav-bar\">\r\n        <div className=\"container\">\r\n          <div className=\"nav-menu w-clearfix\">\r\n            <img\r\n              src=\"https://github.com/lindyw/react-pokeapp-test/blob/master/public/header_icon.png?raw=true\"\r\n              alt=\"pokemon search web app\"\r\n              className=\"app-logo\"\r\n            />\r\n            <div className=\"nav-links\">\r\n              <ul className=\"header-ul\">\r\n                <li className=\"header-li\">\r\n                  <Link to=\"/\">PokeApp</Link>\r\n                </li>\r\n                {this.renderBody()}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Welcome.css\";\r\n\r\nimport Header from \"./Header\";\r\nclass Welcome extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"bg-block\">\r\n\t\t\t\t<Header view=\"home\" />\r\n\t\t\t\t<div className=\"mainContainer\">\r\n\t\t\t\t\t<h2>Welcome to the PokeApp</h2>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto=\"/search\"\r\n\t\t\t\t\t\tclassName=\"go\"\r\n\t\t\t\t\t\tstyle={{ textDecoration: \"none\", color: \"black\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGo!\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n// try using styled-components\r\nconst styledLink = styled(Link)`\r\n\ttext-decoration: none;\r\n\tcolor: black;\r\n\t&:foucs,\r\n\t&:hover,\r\n\t&visited,\r\n\t&link,\r\n\t&active {\r\n\t\ttext-decoration: none;\r\n\t}\r\n`;\r\n\r\nclass PokemonList extends React.Component {\r\n\tstate = {\r\n\t\tname: \"\",\r\n\t\tindex: \"\"\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { name, url } = this.props;\r\n\t\tconst index = url.split(\"/\")[url.split(\"/\").length - 2];\r\n\r\n\t\tthis.setState({\r\n\t\t\tname,\r\n\t\t\tindex\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={`pokemon/${this.state.index}`}>\r\n\t\t\t\t\t{this.state.name}\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\nexport default PokemonList;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Search.css\";\r\n// Components\r\nimport Header from \"./Header\";\r\nimport PokemonList from \"./PokemonList\";\r\n\r\nclass Search extends Component {\r\n\t// state\r\n\tstate = {\r\n\t\turl: \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=964\",\r\n\t\tpokemons: [],\r\n\t\tfilter: \"\"\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst res = await axios.get(this.state.url);\r\n\t\t//\r\n\t\tthis.setState({ pokemons: res.data[\"results\"] });\r\n\t}\r\n\r\n\tupdateSearch(event) {\r\n\t\tthis.setState({\r\n\t\t\tfilter: event.target.value.substr(0, 20).toLowerCase()\r\n\t\t});\r\n\t}\r\n\r\n\t// JSX render\r\n\trender() {\r\n\t\t// Return filtered results\r\n\t\tlet filteredNames = this.state.pokemons.filter(pokemon => {\r\n\t\t\treturn pokemon.name.indexOf(this.state.filter) !== -1;\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Header view=\"search\" />\r\n\t\t\t\t{this.state.pokemons ? (\r\n\t\t\t\t\t<div className=\"searchList\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.filter}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Filter by name\"\r\n\t\t\t\t\t\t\t\tonChange={this.updateSearch.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{filteredNames.map(pokemon => (\r\n\t\t\t\t\t\t\t\t<PokemonList\r\n\t\t\t\t\t\t\t\t\tkey={pokemon.name}\r\n\t\t\t\t\t\t\t\t\tname={pokemon.name}\r\n\t\t\t\t\t\t\t\t\turl={pokemon.url}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<h1>Loading Pokemons</h1>\r\n\t\t\t\t)}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Header from \"./Header\";\r\n\r\nconst TYPE_COLORS = {\r\n\tbug: \"success\",\r\n\tdark: \"dark\",\r\n\tdragon: \"info\",\r\n\telectric: \"warning\",\r\n\tfairy: \"info\",\r\n\tfighting: \"secondary\",\r\n\tfire: \"danger\",\r\n\tflying: \"primary\",\r\n\tghost: \"light\",\r\n\tgrass: \"success\",\r\n\tground: \"dark\",\r\n\tice: \"primary\",\r\n\tnormal: \"secondary\",\r\n\tpoison: \"danger\",\r\n\tpsychic: \"warning\",\r\n\trock: \"secondary\",\r\n\tsteel: \"secondary\",\r\n\twater: \"primary\"\r\n};\r\n\r\nclass Pokemon extends Component {\r\n\t// States for holding all of the pokemon's information\r\n\tstate = {\r\n\t\tname: \"\",\r\n\t\tindex: \"\",\r\n\t\timageUrl: \"\",\r\n\t\ttypes: [],\r\n\t\tmoves: [],\r\n\t\tdescription: \"\",\r\n\t\tstats: {\r\n\t\t\thp: \"\",\r\n\t\t\tattack: \"\",\r\n\t\t\tdefense: \"\",\r\n\t\t\tspeed: \"\",\r\n\t\t\tspecialAttack: \"\",\r\n\t\t\tspecialDefense: \"\"\r\n\t\t},\r\n\t\theight: \"\", //decimeters\r\n\t\tweight: \"\", // lbs\r\n\t\teggGroups: \"\",\r\n\t\tabilities: \"\",\r\n\t\tefforts: \"\",\r\n\t\thatchSteps: \"\"\r\n\t};\r\n\r\n\t// Methods\r\n\tasync componentDidMount() {\r\n\t\tconst { index } = this.props.match.params;\r\n\t\t// Urls for pokemon detail information\r\n\t\tconst pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${index}`;\r\n\t\tconst pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${index}`;\r\n\r\n\t\t/* Pokemon: Get Information from pokemonUrl*/\r\n\t\tconst pokemonData = await axios.get(pokemonUrl);\r\n\t\tconst name = pokemonData.data.name;\r\n\t\tconst imageUrl = pokemonData.data.sprites.front_default;\r\n\r\n\t\tthis.setState({ name });\r\n\t\tthis.setState({ imageUrl });\r\n\r\n\t\tlet { hp, attack, defense, speed, specialAttack, specialDefense } = \"\";\r\n\r\n\t\tpokemonData.data.stats.map(stat => {\r\n\t\t\tswitch (stat.stat.name) {\r\n\t\t\t\tcase \"hp\":\r\n\t\t\t\t\thp = stat[\"base_stat\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"attack\":\r\n\t\t\t\t\tattack = stat[\"base_stat\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"defense\":\r\n\t\t\t\t\tdefense = stat[\"base_stat\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"speed\":\r\n\t\t\t\t\tspeed = stat[\"base_stat\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"special-attack\":\r\n\t\t\t\t\tspecialAttack = stat[\"base_stat\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"special-defense\":\r\n\t\t\t\t\tspecialDefense = stat[\"base_stat\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\t\tconst height = pokemonData.data[\"height\"] + \" dm\";\r\n\t\tconst weight = pokemonData.data[\"weight\"] + \" lbs\";\r\n\r\n\t\tconst types = pokemonData.data.types.map(type => type.type.name);\r\n\t\t// addition for styling: change the display color of type\r\n\t\tconst typeColor = `${TYPE_COLORS[types[types.length - 1]]}`;\r\n\t\tconst moves = pokemonData.data.moves.map(move => move.move.name);\r\n\t\t// Deal with some abilities with dashes (and reformatting: Capitalization for the 1st letter)\r\n\t\tconst abilities = pokemonData.data.abilities.map(ability => {\r\n\t\t\treturn ability.ability.name\r\n\t\t\t\t.toLowerCase()\r\n\t\t\t\t.split(\"-\")\r\n\t\t\t\t.map(a => a.charAt(0).toUpperCase() + a.substring(1))\r\n\t\t\t\t.join(\" \");\r\n\t\t});\r\n\r\n\t\t// Only pass/map out when the effort > 0\r\n\t\tconst efforts = pokemonData.data.stats\r\n\t\t\t.filter(stat => {\r\n\t\t\t\tif (stat.effort > 0) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false; // effort 0 then we ignore it, don't pass it through\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.map(stat => {\r\n\t\t\t\treturn `${stat.effort} ${stat.stat.name}`\r\n\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t.split(\"-\")\r\n\t\t\t\t\t.map(a => a.charAt(0).toUpperCase() + a.substring(1))\r\n\t\t\t\t\t.join(\" \");\r\n\t\t\t})\r\n\t\t\t.join(\", \"); // join them with comma\r\n\r\n\t\t// Pass the information back to the state <- general\r\n\t\tthis.setState({\r\n\t\t\tindex,\r\n\t\t\ttypes,\r\n\t\t\ttypeColor,\r\n\t\t\tmoves,\r\n\t\t\tabilities,\r\n\t\t\tefforts,\r\n\t\t\tstats: {\r\n\t\t\t\thp,\r\n\t\t\t\tattack,\r\n\t\t\t\tdefense,\r\n\t\t\t\tspeed,\r\n\t\t\t\tspecialAttack,\r\n\t\t\t\tspecialDefense\r\n\t\t\t},\r\n\t\t\theight,\r\n\t\t\tweight\r\n\t\t});\r\n\r\n\t\t/* PokemonSpecies: Get Pokemon's description, Catch Rate, EggGroups, Hatch Steps */\r\n\t\tconst speciesData = await axios.get(pokemonSpeciesUrl);\r\n\t\t// await axios.get(pokemonSpeciesUrl).then(speciesData => {\r\n\t\tlet description = \"\";\r\n\t\t// Need to get the English description from the entries (multiple languages flavor_text)\r\n\t\tspeciesData.data.flavor_text_entries.some(flavor => {\r\n\t\t\tif (flavor.language.name === \"en\") {\r\n\t\t\t\tdescription = flavor.flavor_text;\r\n\t\t\t\tdescription = description.replace(\"\\f\", \" \"); // fix the display error\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\t\t// Capture_rate: the base rate is up to 255, round it back to 0-100\r\n\t\tconst catchRate = Math.round(\r\n\t\t\t(100 / 255) * speciesData.data[\"capture_rate\"]\r\n\t\t);\r\n\r\n\t\t// EggGroups: get all the names and join them back tgt\r\n\t\tconst eggGroups = speciesData.data[\"egg_groups\"]\r\n\t\t\t.map(group => {\r\n\t\t\t\treturn group.name\r\n\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t.split(\" \")\r\n\t\t\t\t\t.map(a => a.charAt(0).toUpperCase() + a.substring(1))\r\n\t\t\t\t\t.join(\" \");\r\n\t\t\t})\r\n\t\t\t.join(\", \");\r\n\r\n\t\t// Hatch Steps: (255 * (hatch_counter + 1 ) steps before egg hatches)\r\n\t\tconst hatchSteps = 255 * (speciesData.data[\"hatch_counter\"] + 1);\r\n\r\n\t\t// Pass the information back to the state <- species\r\n\t\tthis.setState({\r\n\t\t\tdescription,\r\n\t\t\tcatchRate,\r\n\t\t\teggGroups,\r\n\t\t\thatchSteps\r\n\t\t});\r\n\t}\r\n\r\n\t// JSX\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header view={this.state.name} />\r\n\t\t\t\t<Card\r\n\t\t\t\t\tclassName=\"text-center mx-auto card h-100\"\r\n\t\t\t\t\tstyle={{ width: \"min-content\", position: \"inherit\" }}\r\n\t\t\t\t\tborder=\"warning\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title className=\"p-title p-text\">\r\n\t\t\t\t\t\t\t{this.state.name}\r\n\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t<Card.Img\r\n\t\t\t\t\t\t\tvariant=\"top\"\r\n\t\t\t\t\t\t\tsrc={this.state.imageUrl}\r\n\t\t\t\t\t\t\tstyle={{ height: \"25vh\", width: \"25vh\" }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Card.Text style={{ padding: \"15px\" }}>\r\n\t\t\t\t\t\t\t<span className=\"p-text\">Types: </span>\r\n\t\t\t\t\t\t\t{this.state.types.map(type => (\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tkey={type}\r\n\t\t\t\t\t\t\t\t\tclassName=\"badge badge-pill badge-primary mr-1 p-text\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{type}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t<span className=\"p-text\">HP: </span>\r\n\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\tstriped\r\n\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\tnow={this.state.stats.hp}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"p-text\">Attack: </span>\r\n\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\tstriped\r\n\t\t\t\t\t\t\tvariant={this.state.typeColor}\r\n\t\t\t\t\t\t\tnow={this.state.stats.attack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"p-text\">Defense: </span>\r\n\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\tstriped\r\n\t\t\t\t\t\t\tvariant={this.state.typeColor}\r\n\t\t\t\t\t\t\tnow={this.state.stats.defense}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"p-text\">Special Attack: </span>\r\n\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\tstriped\r\n\t\t\t\t\t\t\tvariant={this.state.typeColor}\r\n\t\t\t\t\t\t\tnow={this.state.stats.specialAttack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"p-text\">Sepcial Defense: </span>\r\n\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\tstriped\r\n\t\t\t\t\t\t\tvariant={this.state.typeColor}\r\n\t\t\t\t\t\t\tnow={this.state.stats.specialDefense}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<span className=\"p-description p-text\">\r\n\t\t\t\t\t\t\t{this.state.description}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t{/* More Details */}\r\n\t\t\t\t\t\t<Card.Title className=\"p-title\">\r\n\t\t\t\t\t\t\tMore Details\r\n\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t<b>Height: </b> {this.state.height} <br />\r\n\t\t\t\t\t\t\t<b>Egg Groups: </b> {this.state.eggGroups} <br />\r\n\t\t\t\t\t\t\t<b>Weight:</b> {this.state.weight} <br />\r\n\t\t\t\t\t\t\t<b>Hatch Steps:</b> {this.state.hatchSteps} <br />\r\n\t\t\t\t\t\t\t<b>Catch Rate:</b> {this.state.catchRate}% <br />\r\n\t\t\t\t\t\t\t<b>Abilities:</b> {this.state.abilities} <br />\r\n\t\t\t\t\t\t\t<b>Efforts:</b> {this.state.efforts}\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Pokemon;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\n// import Components\nimport Welcome from \"./components/Welcome\";\nimport Search from \"./components/Search\";\nimport Pokemon from \"./components/Pokemon\";\n// Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/pokemon/:index\" component={Pokemon} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./fonts/PokemonGB.ttf\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}